
type User @model @auth(rules: [{ allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  name: String!
  imageUri: String
  status: String
  chatRooms: [ChatRoom] @manyToMany(relationName: "ChatRoomUsers")
}

# many to many relationship 

type ChatRoom @model @auth(rules: [{ allow: private, operations: [read, create, update, delete] }]){
  id: ID!
  # list of users
  chatUsers: [User] @manyToMany(relationName: "ChatRoomUsers")
  # list of messages 
  messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  lastMessageID: ID 
  lastMessage: Message @hasOne(fields: ["lastMessageID"])
}

type Message 
@model @auth(rules: [{ allow: private, operations: [read, create, update, delete] }]){
  id: ID!
  content: String! 
  createdAt: String!
  userID: ID! 
  user: User @hasOne(fields: ["userID"])
  chatID: ID! @index(name:"byChatRoom", sortKeyFields: ["createdAt"], queryField: "messagesByChatRoom")
}